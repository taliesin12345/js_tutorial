#!/usr/bin/node

// Returns the paragraphs from a Wikipedia link, stripped of reference numbers.

let urllib = require("urllib");
// To run the script from anywhere, it needs instead an absolute path:
// let urllib = require("/../../usr/local/lib/node_modules/urllib");
let url = process.argv[2];
let fs = require("fs");

const jsdom = require("jsdom");
// To run the script from anywhere, it needs instead an absolute path:
// const jsdom = require("/../../usr/local/lib/node_modules/jsdom");
const { JSDOM } = jsdom;

// If the URL is missing, exit the script.
if (!url) {
  console.log("Usage: wikp <url>");
  process.exit(1);
}

urllib.request(url, { followRedirect: true }, function (error, data, response) {
  let body = data.toString();
  // Simulate a Document Object Model thanks to JSDOM:
  let { document } = (new JSDOM(body)).window;

  // Grab all the paragraphs and references.
  let paragraphs = document.querySelectorAll("p");
  let references = document.querySelectorAll(".reference");

  // Remove any references.
  references.forEach(function(reference) {
    reference.remove();
  });

  // Print out all the paragraphs.
  let paragraphsOutput = [];
  paragraphs.forEach(function(paragraph) {
    console.log(paragraph.textContent);
    paragraphsOutput.push(paragraph.textContent);
  });

  // Redirects all the paragraphs in a text file.
  let paragraphsOutputProcessed = paragraphsOutput.join("\n");
  fs.writeFileSync("article.txt", paragraphsOutputProcessed);
});
